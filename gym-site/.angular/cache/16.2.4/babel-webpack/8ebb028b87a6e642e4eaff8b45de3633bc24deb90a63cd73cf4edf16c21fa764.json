{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/Environments/myEnvironments';\nimport { throwError } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport class UsersService {\n  constructor(http, jwtHelper, router) {\n    this.http = http;\n    this.jwtHelper = jwtHelper;\n    this.router = router;\n    this.LogStatus = false; //diffult\n    this.baseApiUrl = environment.baseApiUrl; //get Url Api\n    this.userPayload = this.decodeToken;\n  }\n  get token() {\n    return localStorage.getItem('jwt');\n  }\n  PostLogin(credentials) {\n    return this.http.post(this.baseApiUrl + \"/api/Users/Login/\", credentials, {\n      responseType: 'json'\n    });\n  }\n  GetEmail() {\n    const token = localStorage.getItem('jwt');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    const options = {\n      headers: new HttpHeaders(headers) // Use HttpHeaders object to set headers\n    };\n\n    return this.http.get(this.baseApiUrl + \"/api/Users/GetEmail\", options);\n  }\n  LogOut() {\n    localStorage.removeItem('jwt');\n    localStorage.clear; // Remove the JWT token from storage\n    this.LogStatus = false; // Update the LoggedIn flag\n    this.router.navigate(['/log-In']);\n  }\n  IsUserAuthenticated() {\n    const token = localStorage.getItem('jwt'); //store the token found\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      //if token !=null and not expired\n      this.LogStatus = true; //log is true\n      return this.LogStatus; //true\n    }\n\n    this.LogStatus = false; //log is false\n    return this.LogStatus; //false\n  }\n\n  addUser(addUserRequest) {\n    return this.http.post(this.baseApiUrl + '/api/Users/Register', addUserRequest);\n  }\n  getall() {\n    const token = localStorage.getItem('jwt');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    const options = {\n      headers: new HttpHeaders(headers) // Use HttpHeaders object to set headers\n    };\n\n    return this.http.get(this.baseApiUrl + \"/api/Users/GetAll\", options);\n  }\n  getUserIdById(email) {\n    console.log(this.baseApiUrl + \"/api/Users/\" + email);\n    return this.http.get(this.baseApiUrl + \"/api/Users/\" + email);\n  }\n  getUserToken() {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      return throwError('Token not found');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    const options = {\n      headers: headers\n    };\n    return this.http.get(this.baseApiUrl + '/api/Users/profile', options);\n  }\n  decodeToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.token();\n    console.log(token);\n    return \"\";\n  }\n  getFullNameFromToken() {\n    if (this.userPayload) return this.userPayload.name;\n  }\n  getRole() {\n    if (this.userPayload) return this.userPayload.admin;\n  }\n}\n_class = UsersService;\n_class.ɵfac = function UsersService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","environment","throwError","JwtHelperService","UsersService","constructor","http","jwtHelper","router","LogStatus","baseApiUrl","userPayload","decodeToken","token","localStorage","getItem","PostLogin","credentials","post","responseType","GetEmail","headers","Authorization","options","get","LogOut","removeItem","clear","navigate","IsUserAuthenticated","isTokenExpired","addUser","addUserRequest","getall","getUserIdById","email","console","log","getUserToken","getFullNameFromToken","name","getRole","admin","i0","ɵɵinject","i1","HttpClient","i2","i3","Router","factory","ɵfac","providedIn"],"sources":["C:\\angular\\gym-site\\src\\Service\\Users\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/Environments/myEnvironments'\nimport { Observable,of, throwError } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Credentials } from '../../models/Credetials.model';\r\nimport { user } from '../../models/user.model';\r\nimport { Router } from '@angular/router';\r\n//import jwt_decode from 'jwt-decode';\r\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\r\n\r\n\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  private userPayload: any;\n  LogStatus: boolean = false;//diffult\n  baseApiUrl: string = environment.baseApiUrl;//get Url Api\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService, private router: Router) {\n    this.userPayload = this.decodeToken;\n  }\n\n  get token(): any {//accses aauthentiction\n    return localStorage.getItem('jwt');\n  }\n  PostLogin(credentials: Credentials): Observable<Credentials> {//after log in return the credentials\n    return this.http.post<Credentials>(this.baseApiUrl + \"/api/Users/Login/\", credentials, { responseType: 'json' });\n  }\n\n  GetEmail(): Observable<string> {\r\n    const token = localStorage.getItem('jwt');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n    const options = {\r\n      headers: new HttpHeaders(headers) // Use HttpHeaders object to set headers\r\n    };\r\n\r\n    return this.http.get<string>(this.baseApiUrl + \"/api/Users/GetEmail\", options);\r\n  }\n\n  LogOut() {\n    localStorage.removeItem('jwt');\n    localStorage.clear;// Remove the JWT token from storage\n    this.LogStatus = false; // Update the LoggedIn flag\r\n      this.router.navigate(['/log-In']);\n  }\n\n  IsUserAuthenticated() {\n    const token = localStorage.getItem('jwt');//store the token found\n\n    if (token && !this.jwtHelper.isTokenExpired(token)) {//if token !=null and not expired\n      this.LogStatus = true//log is true\n      return this.LogStatus;//true\n    }\n    this.LogStatus = false;//log is false\n    return this.LogStatus;//false\n  }\n\n  addUser(addUserRequest: user): Observable<user> {//return ok\n    return this.http.post<user>(this.baseApiUrl + '/api/Users/Register', addUserRequest);\r\n  }\n\n  getall(): Observable<Credentials> {\n    const token = localStorage.getItem('jwt');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n    const options = {\r\n      headers: new HttpHeaders(headers) // Use HttpHeaders object to set headers\r\n    };\r\n\r\n    return this.http.get<Credentials>(this.baseApiUrl + \"/api/Users/GetAll\", options);\r\n  }\n\n\n  getUserIdById(email: string): Observable<user> {\n    console.log(this.baseApiUrl + \"/api/Users/\" + email);\n    return this.http.get<user>(this.baseApiUrl + \"/api/Users/\" + email);\r\n  }\n\n  getUserToken(): Observable<user> {\r\n    const token = localStorage.getItem('jwt');\r\n    if (!token) {\r\n      return throwError('Token not found');\r\n    }\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n    const options = { headers: headers };\r\n    return this.http.get<user>(this.baseApiUrl + '/api/Users/profile', options);\r\n  }\n\n  decodeToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.token();\n    console.log(token);\n    return \"\"\r\n  }\n  getFullNameFromToken() {\n    if (this.userPayload)\r\n      return this.userPayload.name;\r\n  }\n  getRole() {\n    if (this.userPayload)\r\n    return this.userPayload.admin;\r\n  }\n\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAAwBC,UAAU,QAAQ,MAAM;AAChD,SAASC,gBAAgB,QAAQ,oBAAoB;;;;;AAYrD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB,EAAUC,SAA2B,EAAUC,MAAc;IAA7E,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,SAAS,GAATA,SAAS;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAFzF,KAAAC,SAAS,GAAY,KAAK,CAAC;IAC3B,KAAAC,UAAU,GAAWT,WAAW,CAACS,UAAU,CAAC;IAE1C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW;EACrC;EAEA,IAAIC,KAAKA,CAAA;IACP,OAAOC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACpC;EACAC,SAASA,CAACC,WAAwB;IAChC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAc,IAAI,CAACR,UAAU,GAAG,mBAAmB,EAAEO,WAAW,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAClH;EAEAC,QAAQA,CAAA;IACN,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,MAAMM,OAAO,GAAG;MACdC,aAAa,EAAE,UAAUT,KAAK;KAC/B;IAED,MAAMU,OAAO,GAAG;MACdF,OAAO,EAAE,IAAIrB,WAAW,CAACqB,OAAO,CAAC,CAAC;KACnC;;IAED,OAAO,IAAI,CAACf,IAAI,CAACkB,GAAG,CAAS,IAAI,CAACd,UAAU,GAAG,qBAAqB,EAAEa,OAAO,CAAC;EAChF;EAEAE,MAAMA,CAAA;IACJX,YAAY,CAACY,UAAU,CAAC,KAAK,CAAC;IAC9BZ,YAAY,CAACa,KAAK,CAAC;IACnB,IAAI,CAAClB,SAAS,GAAG,KAAK,CAAC,CAAC;IACtB,IAAI,CAACD,MAAM,CAACoB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACrC;EAEAC,mBAAmBA,CAAA;IACjB,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;IAE1C,IAAIF,KAAK,IAAI,CAAC,IAAI,CAACN,SAAS,CAACuB,cAAc,CAACjB,KAAK,CAAC,EAAE;MAAC;MACnD,IAAI,CAACJ,SAAS,GAAG,IAAI;MACrB,OAAO,IAAI,CAACA,SAAS,CAAC;;;IAExB,IAAI,CAACA,SAAS,GAAG,KAAK,CAAC;IACvB,OAAO,IAAI,CAACA,SAAS,CAAC;EACxB;;EAEAsB,OAAOA,CAACC,cAAoB;IAC1B,OAAO,IAAI,CAAC1B,IAAI,CAACY,IAAI,CAAO,IAAI,CAACR,UAAU,GAAG,qBAAqB,EAAEsB,cAAc,CAAC;EACtF;EAEAC,MAAMA,CAAA;IACJ,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,MAAMM,OAAO,GAAG;MACdC,aAAa,EAAE,UAAUT,KAAK;KAC/B;IAED,MAAMU,OAAO,GAAG;MACdF,OAAO,EAAE,IAAIrB,WAAW,CAACqB,OAAO,CAAC,CAAC;KACnC;;IAED,OAAO,IAAI,CAACf,IAAI,CAACkB,GAAG,CAAc,IAAI,CAACd,UAAU,GAAG,mBAAmB,EAAEa,OAAO,CAAC;EACnF;EAGAW,aAAaA,CAACC,KAAa;IACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC3B,UAAU,GAAG,aAAa,GAAGyB,KAAK,CAAC;IACpD,OAAO,IAAI,CAAC7B,IAAI,CAACkB,GAAG,CAAO,IAAI,CAACd,UAAU,GAAG,aAAa,GAAGyB,KAAK,CAAC;EACrE;EAEAG,YAAYA,CAAA;IACV,MAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAI,CAACF,KAAK,EAAE;MACV,OAAOX,UAAU,CAAC,iBAAiB,CAAC;;IAEtC,MAAMmB,OAAO,GAAG,IAAIrB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUa,KAAK;KACjC,CAAC;IACF,MAAMU,OAAO,GAAG;MAAEF,OAAO,EAAEA;IAAO,CAAE;IACpC,OAAO,IAAI,CAACf,IAAI,CAACkB,GAAG,CAAO,IAAI,CAACd,UAAU,GAAG,oBAAoB,EAAEa,OAAO,CAAC;EAC7E;EAEAX,WAAWA,CAAA;IACT,MAAML,SAAS,GAAG,IAAIJ,gBAAgB,EAAE;IACxC,MAAMU,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;IAC1BuB,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC;IAClB,OAAO,EAAE;EACX;EACA0B,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAAC5B,WAAW,EAClB,OAAO,IAAI,CAACA,WAAW,CAAC6B,IAAI;EAChC;EACAC,OAAOA,CAAA;IACL,IAAI,IAAI,CAAC9B,WAAW,EACpB,OAAO,IAAI,CAACA,WAAW,CAAC+B,KAAK;EAC/B;;SA/FWtC,YAAY;;mBAAZA,MAAY,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAA5C,gBAAA,GAAAwC,EAAA,CAAAC,QAAA,CAAAI,EAAA,CAAAC,MAAA;AAAA;;SAAZ7C,MAAY;EAAA8C,OAAA,EAAZ9C,MAAY,CAAA+C,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}