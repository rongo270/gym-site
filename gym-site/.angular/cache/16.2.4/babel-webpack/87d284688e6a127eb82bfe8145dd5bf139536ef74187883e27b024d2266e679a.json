{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from '../../Environments/myEnvironments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserStoreService {\n  constructor(http) {\n    this.http = http;\n    this.Name$ = new BehaviorSubject(\"\");\n    this.admin$ = new BehaviorSubject(false);\n    this.baseApiUrl = environment.baseApiUrl;\n  }\n  getRoleFromStore() {\n    return this.admin$.asObservable();\n  }\n  getFullNameFromString() {\n    return this.Name$.asObservable();\n  }\n  getAllUsers() {\n    return this.http.get(this.baseApiUrl + \"/api/Users\");\n  }\n  //editUser(): Observable<user>\n  getUser(id) {\n    return this.http.get(this.baseApiUrl + '/api/Users/' + id);\n  }\n  updateUser(id, userDetails) {\n    return this.http.put(this.baseApiUrl + '/api/Users/' + id, userDetails);\n  }\n  deleteUser(id) {\n    return this.http.delete(this.baseApiUrl + '/api/Users/' + id);\n  }\n}\n_class = UserStoreService;\n_class.ɵfac = function UserStoreService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","environment","UserStoreService","constructor","http","Name$","admin$","baseApiUrl","getRoleFromStore","asObservable","getFullNameFromString","getAllUsers","get","getUser","id","updateUser","userDetails","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular\\gym-site\\src\\Service\\user-store\\user-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { user } from '../../models/user.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../Environments/myEnvironments';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStoreService {\n  private Name$ = new BehaviorSubject<string>(\"\");\n  private admin$ = new BehaviorSubject<boolean>(false);\n  baseApiUrl: string = environment.baseApiUrl;\n  constructor(private http: HttpClient) { }\n\n  public getRoleFromStore() {\n    return this.admin$.asObservable();\r\n  }\n  public getFullNameFromString() {\n    return this.Name$.asObservable();\n  }\n\n  getAllUsers(): Observable<user[]> {\n    return this.http.get<user[]>(this.baseApiUrl + \"/api/Users\");\r\n  }\n\n  //editUser(): Observable<user>\n  getUser(id: string): Observable<user> {\n    return this.http.get<user>(this.baseApiUrl + '/api/Users/' + id);\r\n  }\n\n  updateUser(id: string, userDetails: user): Observable<user> {//return ok respons\n    return this.http.put<user>(this.baseApiUrl + '/api/Users/' + id, userDetails);\r\n  }\n\n  deleteUser(id: string): Observable<user> {//return ok respons\n    return this.http.delete<user>(this.baseApiUrl + '/api/Users/' + id)\r\n  }\n\n}\n\n"],"mappings":";AACA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,mCAAmC;;;AAK/D,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,KAAK,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;IACvC,KAAAM,MAAM,GAAG,IAAIN,eAAe,CAAU,KAAK,CAAC;IACpD,KAAAO,UAAU,GAAWN,WAAW,CAACM,UAAU;EACH;EAEjCC,gBAAgBA,CAAA;IACrB,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;EACnC;EACOC,qBAAqBA,CAAA;IAC1B,OAAO,IAAI,CAACL,KAAK,CAACI,YAAY,EAAE;EAClC;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAS,IAAI,CAACL,UAAU,GAAG,YAAY,CAAC;EAC9D;EAEA;EACAM,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAO,IAAI,CAACL,UAAU,GAAG,aAAa,GAAGO,EAAE,CAAC;EAClE;EAEAC,UAAUA,CAACD,EAAU,EAAEE,WAAiB;IACtC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAO,IAAI,CAACV,UAAU,GAAG,aAAa,GAAGO,EAAE,EAAEE,WAAW,CAAC;EAC/E;EAEAE,UAAUA,CAACJ,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACe,MAAM,CAAO,IAAI,CAACZ,UAAU,GAAG,aAAa,GAAGO,EAAE,CAAC;EACrE;;SA5BWZ,gBAAgB;;mBAAhBA,MAAgB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBrB,MAAgB;EAAAsB,OAAA,EAAhBtB,MAAgB,CAAAuB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}