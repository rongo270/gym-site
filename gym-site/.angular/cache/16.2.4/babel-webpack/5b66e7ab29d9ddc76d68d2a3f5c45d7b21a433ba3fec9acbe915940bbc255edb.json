{"ast":null,"code":"var _class;\nimport { environment } from 'src/Environments/myEnvironments';\nimport { ProductsService } from '../../../Service/products/products.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/Service/cart/cart.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../../Service/products/products.service\";\nimport * as i4 from \"../../../Service/Users/users.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nfunction ShoppingCartComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Your shopping cart is empty.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ShoppingCartComponent_ng_template_1_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ShoppingCartComponent_ng_template_1_tr_12_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.removeFromCart(item_r4.id));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.price);\n  }\n}\nfunction ShoppingCartComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Product Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, ShoppingCartComponent_ng_template_1_tr_12_Template, 10, 2, \"tr\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 3);\n    i0.ɵɵtext(14, \"Proceed to Checkout\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.cartItems);\n  }\n}\nexport class ShoppingCartComponent {\n  constructor(cartService, http, productService, userService) {\n    this.cartService = cartService;\n    this.http = http;\n    this.productService = productService;\n    this.userService = userService;\n    this.cartItems = [];\n    this.UserItems = [];\n    this.baseApiUrl = environment.baseApiUrl; // API base URL\n    this.loggedIn = false; // You should set this based on user login status\n  }\n\n  ngOnInit() {\n    if (this.userService.LogStatus) {\n      const userId = this.userService.getIdfromToken();\n      this.cartService.getCartItemsUser(userId).subscribe(item => {\n        //console.log(\"Response:\", item); // Log the entire response\n        this.UserItems = item;\n      });\n      console.log(this.UserItems);\n      this.productService.GetCartItem(this.UserItems).subscribe(items => {\n        this.cartItems = items;\n      });\n    } else {\n      this.cartService.getCartItems().subscribe(items => {\n        this.cartItems = items;\n      });\n    }\n  }\n  removeFromCart(productId) {\n    this.productService.updateAvailable(productId, 1).subscribe({\n      next: product => {\n        console.log(product);\n      },\n      error: respose => {\n        console.log(respose);\n      }\n    });\n    this.cartService.removeFromCart(productId);\n  }\n  createOrder() {\n    const orderData = {\n      userId: 'user123',\n      cartItems: this.cartItems\n    };\n    if (this.loggedIn) {\n      // User is logged in, send data to the API\n      const orderApiUrl = this.baseApiUrl + '/create-order';\n      this.http.post(orderApiUrl, orderData).subscribe(response => {\n        // Assuming your API returns an array of updated cart items, change 'any[]' to the actual response type\n        this.cartService.updateCartInToken(response); // Update the token with the response\n        this.cartService.clearCart(); // Clear the cart\n      }, error => {\n        console.error('Failed to create the order:', error);\n      });\n    } else {\n      // User is not logged in, save data to local storage\n      this.cartService.updateCartInToken(orderData.cartItems);\n      this.cartService.clearCart();\n    }\n  }\n}\n_class = ShoppingCartComponent;\n_class.ɵfac = function ShoppingCartComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ProductsService), i0.ɵɵdirectiveInject(i4.UsersService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-shopping-cart\"]],\n  features: [i0.ɵɵProvidersFeature([ProductsService])],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"cartContents\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/checkout\"], [3, \"click\"]],\n  template: function ShoppingCartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ShoppingCartComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, ShoppingCartComponent_ng_template_1_Template, 15, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length === 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["environment","ProductsService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ShoppingCartComponent_ng_template_1_tr_12_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r6","item_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","removeFromCart","id","ɵɵadvance","ɵɵtextInterpolate","name","price","ɵɵtemplate","ShoppingCartComponent_ng_template_1_tr_12_Template","ɵɵproperty","ctx_r2","cartItems","ShoppingCartComponent","constructor","cartService","http","productService","userService","UserItems","baseApiUrl","loggedIn","ngOnInit","LogStatus","userId","getIdfromToken","getCartItemsUser","subscribe","item","console","log","GetCartItem","items","getCartItems","productId","updateAvailable","next","product","error","respose","createOrder","orderData","orderApiUrl","post","response","updateCartInToken","clearCart","ɵɵdirectiveInject","i1","CartService","i2","HttpClient","i3","i4","UsersService","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ShoppingCartComponent_Template","rf","ctx","ShoppingCartComponent_div_0_Template","ShoppingCartComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","length","_r1"],"sources":["C:\\angular\\gym-site\\src\\component\\cart\\shopping-cart\\shopping-cart.component.ts","C:\\angular\\gym-site\\src\\component\\cart\\shopping-cart\\shopping-cart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/Service/cart/cart.service';\nimport { product } from 'src/models/product.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/Environments/myEnvironments';\nimport { ProductsService } from '../../../Service/products/products.service';\r\nimport { UsersService } from '../../../Service/Users/users.service';\r\nimport { CartItem } from '../../../models/CartItem.model';\r\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss'],\n  providers: [ProductsService]\n})\nexport class ShoppingCartComponent implements OnInit {\n  cartItems: product[] = [];\n  UserItems: CartItem[] = [];\n  baseApiUrl: string = environment.baseApiUrl; // API base URL\n  loggedIn: boolean = false; // You should set this based on user login status\n\n  constructor(private cartService: CartService,\n    private http: HttpClient,\n    private productService: ProductsService,\n    private userService: UsersService) { }\n\n  ngOnInit(): void {\n    if (this.userService.LogStatus) {\n      const userId = this.userService.getIdfromToken();\r\n      this.cartService.getCartItemsUser(userId).subscribe(item => {\r\n        //console.log(\"Response:\", item); // Log the entire response\r\n        this.UserItems = item;\r\n      });\n      console.log(this.UserItems);\n      this.productService.GetCartItem(this.UserItems).subscribe(items => { \n        this.cartItems = items\n      });\n    } else {\n      this.cartService.getCartItems().subscribe(items => {\n        this.cartItems = items;\n      });\n    }\n  }\n\n  removeFromCart(productId: string): void {\n    this.productService.updateAvailable(productId, 1).subscribe({\n      next: (product) => {\r\n        console.log(product);\r\n      },\r\n      error: (respose) => {\n        console.log(respose)\n      }\r\n    })\n    this.cartService.removeFromCart(productId);\n  }\n\n\n\n  createOrder(): void {\n    const orderData = {\n      userId: 'user123', // You should replace this with the actual user ID when the user is logged in\n      cartItems: this.cartItems,\n    };\n\n    if (this.loggedIn) {\n      // User is logged in, send data to the API\n      const orderApiUrl = this.baseApiUrl + '/create-order';\n\n      this.http.post<any[]>(orderApiUrl, orderData).subscribe(\n        (response: any[]) => {\n          // Assuming your API returns an array of updated cart items, change 'any[]' to the actual response type\n          this.cartService.updateCartInToken(response); // Update the token with the response\n          this.cartService.clearCart(); // Clear the cart\n        },\n        (error) => {\n          console.error('Failed to create the order:', error);\n        }\n      );\n    } else {\n      // User is not logged in, save data to local storage\n      this.cartService.updateCartInToken(orderData.cartItems);\n      this.cartService.clearCart();\n    }\n  }\n}\n","<div *ngIf=\"cartItems.length === 0; else cartContents\">\r\n  <p>Your shopping cart is empty.</p>\r\n</div>\r\n\r\n<ng-template #cartContents>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Product Name</th>\r\n        <th>Price</th>\r\n        <th>Quantity</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of cartItems\">\r\n        <td>{{ item.name }}</td>\r\n        <td>{{ item.price }}</td>\r\n        <td>1</td> \r\n        <td>\r\n          <button (click)=\"removeFromCart(item.id)\">Remove</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <button routerLink=\"/checkout\">Proceed to Checkout</button> \r\n</ng-template>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}