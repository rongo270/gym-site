{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { environment } from 'src/Environments/myEnvironments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductsService = /*#__PURE__*/(() => {\n  var _class;\n  class ProductsService {\n    //baseApiUrl: string = 'https://localhost:7122';\n    constructor(http) {\n      this.http = http;\n      this.baseApiUrl = environment.baseApiUrl;\n    }\n    // Gets header and adds the token\n    getHeadersNoType() {\n      const headers = new HttpHeaders({\n        Authorization: 'Bearer ' + localStorage.getItem('jwt')\n      });\n      return headers;\n    }\n    DefaultHeader() {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      });\n      return headers;\n    }\n    GetImage(id) {\n      const headers = this.DefaultHeader();\n      return this.http.get(environment.baseApiUrl + '/api/Products/image/' + id, {\n        headers,\n        responseType: 'blob'\n      });\n    }\n    getAllProducts() {\n      return this.http.get(this.baseApiUrl + '/api/products');\n    }\n    addProduct(addProductRequest) {\n      return this.http.post(this.baseApiUrl + '/api/products', addProductRequest);\n    }\n    getProduct(id) {\n      return this.http.get(this.baseApiUrl + '/api/products/' + id);\n    }\n    updateProduct(id, updateProductRequest) {\n      return this.http.put(this.baseApiUrl + '/api/products/' + id, updateProductRequest);\n    }\n    deleteProduct(id) {\n      return this.http.delete(this.baseApiUrl + '/api/products/' + id);\n    }\n    // Add product image (admin)\n    PostImage(formData) {\n      const headers = this.getHeadersNoType();\n      return this.http.post(environment.baseApiUrl + '/api/products/Image', formData, {\n        headers: headers,\n        reportProgress: true,\n        observe: 'events'\n      });\n    }\n  }\n  _class = ProductsService;\n  _class.ɵfac = function ProductsService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}