{"ast":null,"code":"import _asyncToGenerator from \"C:/angular/gym-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginFormComponent = class LoginFormComponent {\n  // For Local Creds Saving\n  constructor(router, usersService, cartService) {\n    this.router = router;\n    this.usersService = usersService;\n    this.cartService = cartService;\n    this.invalidLogin = false;\n    this.LoggedIn = false;\n    this.cartItems = [];\n    this.myUser = {\n      id: '',\n      email: '',\n      password: '',\n      name: '',\n      lastName: '',\n      admin: false\n    };\n    this.addCartRequest = {\n      CartId: '00000000-0000-0000-0000-000000000000',\n      userId: '',\n      ProductId: '',\n      Quantity: 1\n    };\n  }\n  ngOnInit() {\n    this.usersService.IsUserAuthenticated();\n    this.LoggedIn = this.usersService.LogStatus;\n    if (this.LoggedIn) {\n      this.storagechange();\n    }\n  }\n  UserAuthenticated() {\n    this.usersService.IsUserAuthenticated();\n  }\n  login(form) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const credentials = {\n        email: form.value.email,\n        password: form.value.password\n      };\n      _this.myUser.email = credentials.email;\n      _this.myUser.password = credentials.password;\n      yield _this.usersService.PostLogin(credentials).subscribe(response => {\n        const token = response.token;\n        localStorage.setItem('jwt', token);\n        _this.invalidLogin = false;\n        if (_this.usersService.IsUserAuthenticated()) {\n          _this.usersService.LogStatus = true;\n          //this.storagechange();\n          window.location.reload();\n        }\n      }, err => {\n        _this.invalidLogin = true;\n      });\n    })();\n  }\n  storagechange() {\n    this.addCartRequest.userId = this.usersService.getIdfromToken();\n    this.cartService.getCartItems().subscribe(items => {\n      this.cartItems = items;\n      items.forEach(item => {\n        this.addCartRequest.ProductId = item.id;\n        this.cartService.addToCartUser(this.addCartRequest).subscribe({\n          next: response => {\n            console.log(\"Item added to cart successfully\");\n          },\n          error: error => {\n            console.log(\"Problem adding to cart: \", error);\n          }\n        });\n      });\n    });\n    this.cartService.clearCart();\n  }\n};\nLoginFormComponent = __decorate([Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})], LoginFormComponent);","map":{"version":3,"names":["Component","LoginFormComponent","constructor","router","usersService","cartService","invalidLogin","LoggedIn","cartItems","myUser","id","email","password","name","lastName","admin","addCartRequest","CartId","userId","ProductId","Quantity","ngOnInit","IsUserAuthenticated","LogStatus","storagechange","UserAuthenticated","login","form","_this","_asyncToGenerator","credentials","value","PostLogin","subscribe","response","token","localStorage","setItem","window","location","reload","err","getIdfromToken","getCartItems","items","forEach","item","addToCartUser","next","console","log","error","clearCart","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\angular\\gym-site\\src\\component\\login-form\\login-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UsersService } from 'src/Service/Users/users.service';\nimport { user } from 'src/models/user.model';\nimport { CartService } from '../../Service/cart/cart.service';\r\nimport { product } from '../../models/product.model';\r\nimport { of } from 'rxjs';\r\nimport { CartItem } from '../../models/CartItem.model';\r\n\n\n\n\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent {\n  invalidLogin: boolean = false;\n  LoggedIn: boolean = false;\n  cartItems: product[] = [];\n  myUser: user = {\n    id: '',\n    email: '',\n    password: '',\n    name: '',\n    lastName: '',\n    admin: false\n  };\n  addCartRequest: CartItem = {\n    CartId: '00000000-0000-0000-0000-000000000000',\r\n    userId: '',\r\n    ProductId: '',\r\n    Quantity: 1\r\n  }\n\n  // For Local Creds Saving\n  constructor(private router: Router, private usersService: UsersService, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.usersService.IsUserAuthenticated();\n    this.LoggedIn = this.usersService.LogStatus;\n    if (this.LoggedIn) { this.storagechange() }\n  }\n  public UserAuthenticated() {\n    this.usersService.IsUserAuthenticated();\n  }\n\n  async login(form: NgForm) {\r\n    const credentials = {\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n    };\r\n\r\n    this.myUser.email = credentials.email;\r\n    this.myUser.password = credentials.password;\r\n\r\n\r\n    await this.usersService.PostLogin(credentials).subscribe(\r\n      (response) => {\r\n        const token = (<any>response).token;\r\n        localStorage.setItem('jwt', token);\r\n        this.invalidLogin = false;\r\n        if (this.usersService.IsUserAuthenticated()) {\r\n          this.usersService.LogStatus = true;\r\n          //this.storagechange();\r\n          window.location.reload();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.invalidLogin = true;\r\n      }\r\n    );\r\n\r\n  }\r\n\n  storagechange() {\n\n    this.addCartRequest.userId = this.usersService.getIdfromToken();\n    this.cartService.getCartItems().subscribe(items => {\n      this.cartItems = items;\n      items.forEach((item) => {\n       this.addCartRequest.ProductId = item.id;\n        this.cartService.addToCartUser(this.addCartRequest).subscribe({\r\n          next: (response) => {//after go to product page\r\n            console.log(\"Item added to cart successfully\");\r\n          },\r\n          error: (error) => {\n            console.log(\"Problem adding to cart: \", error);\n          }\r\n        });\r\n      });\n    });\n    this.cartService.clearCart();\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}