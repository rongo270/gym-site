{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafeResourceUrlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  // This pipe makes urls sanitized and safe to use in the website.\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n_class = SafeResourceUrlPipe;\n_class.ɵfac = function SafeResourceUrlPipe_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"safeResourceUrl\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["SafeResourceUrlPipe","constructor","sanitizer","transform","url","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure"],"sources":["C:\\angular\\gym-site\\src\\Pipes\\safe-resource-url.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeResourceUrl' })\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n\n  // This pipe makes urls sanitized and safe to use in the website.\n  transform(url: string): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n"],"mappings":";;;AAIA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAkB;EAE/C;EACAC,SAASA,CAACC,GAAW;IACnB,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,GAAG,CAAC;EAC3D;;SANWJ,mBAAmB;;mBAAnBA,MAAmB,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;;;QAAnBT,MAAmB;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}