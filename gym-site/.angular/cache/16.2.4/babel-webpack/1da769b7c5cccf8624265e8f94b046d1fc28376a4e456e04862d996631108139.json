{"ast":null,"code":"import _asyncToGenerator from \"C:/angular/gym-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/Service/Users/users.service\";\nimport * as i3 from \"../../Service/cart/cart.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginFormComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Invalid name or password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_div_1_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r3 = i0.ɵɵreference(2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.login(_r3));\n    });\n    i0.ɵɵelementStart(3, \"div\", 0)(4, \"h1\", 4);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, LoginFormComponent_div_1_div_6_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"div\")(9, \"label\", 6);\n    i0.ɵɵtext(10, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"label\", 8);\n    i0.ɵɵtext(14, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"button\", 10);\n    i0.ɵɵtext(18, \"Login\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invalidLogin);\n  }\n}\nfunction LoginFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 4);\n    i0.ɵɵtext(2, \"You are logged in !\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"dont have a user, click \");\n    i0.ɵɵelementStart(2, \"a\", 12);\n    i0.ɵɵtext(3, \"here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" to creat\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginFormComponent {\n  // For Local Creds Saving\n  constructor(router, usersService, cartService) {\n    this.router = router;\n    this.usersService = usersService;\n    this.cartService = cartService;\n    this.invalidLogin = false;\n    this.LoggedIn = false;\n    this.cartItems = [];\n    this.myUser = {\n      id: '',\n      email: '',\n      password: '',\n      name: '',\n      lastName: '',\n      admin: false\n    };\n    this.addCartRequest = {\n      CartId: '',\n      userId: '',\n      ProductId: '',\n      Quantity: 1\n    };\n  }\n  ngOnInit() {\n    this.usersService.IsUserAuthenticated();\n    this.LoggedIn = this.usersService.LogStatus;\n  }\n  UserAuthenticated() {\n    this.usersService.IsUserAuthenticated();\n  }\n  login(form) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const credentials = {\n        email: form.value.email,\n        password: form.value.password\n      };\n      _this.myUser.email = credentials.email;\n      _this.myUser.password = credentials.password;\n      yield _this.usersService.PostLogin(credentials).subscribe(response => {\n        const token = response.token;\n        localStorage.setItem('jwt', token);\n        _this.invalidLogin = false;\n        if (_this.usersService.IsUserAuthenticated()) {\n          _this.usersService.LogStatus = true;\n          const userId = _this.usersService.getIdfromToken();\n          _this.storagechange(userId);\n          //window.location.reload();\n        }\n      }, err => {\n        _this.invalidLogin = true;\n      });\n    })();\n  }\n  storagechange(userId) {\n    this.cartService.getCartItems().subscribe(items => {\n      this.cartItems = items;\n      items.forEach(item => {\n        this.addCartRequest.userId = userId;\n        console.log(userId);\n        this.addCartRequest.CartId = \"00000000-0000-0000-0000-000000000000\";\n        this.addCartRequest.ProductId = item.id;\n        console.log(this.addCartRequest);\n        this.cartService.addToCartUser(this.addCartRequest).subscribe({\n          next: response => {\n            console.log(\"Item added to cart successfully\");\n          },\n          error: error => {\n            console.log(\"Problem adding to cart: \", error);\n          }\n        });\n      });\n      //this.cartService.clearCart();\n    });\n  }\n}\n_class = LoginFormComponent;\n_class.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.CartService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-form\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"container-xxl\", \"mt-5\"], [4, \"ngIf\"], [1, \"form-signin\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"center\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"sr-only\"], [\"name\", \"email\", \"type\", \"text\", \"id\", \"email\", \"ngModel\", \"\", \"placeholder\", \"email\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"for\", \"password\", 1, \"sr-only\"], [\"name\", \"password\", \"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"placeholder\", \"password\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"alert\", \"alert-danger\"], [\"href\", \"sign-in\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, LoginFormComponent_div_1_Template, 19, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, LoginFormComponent_div_2_Template, 3, 0, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, LoginFormComponent_div_3_Template, 5, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.LoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.LoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.LoggedIn == false);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginFormComponent_div_1_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r6","_r3","ɵɵreference","ctx_r5","ɵɵnextContext","ɵɵresetView","login","ɵɵtemplate","LoginFormComponent_div_1_div_6_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","invalidLogin","LoginFormComponent","constructor","router","usersService","cartService","LoggedIn","cartItems","myUser","id","email","password","name","lastName","admin","addCartRequest","CartId","userId","ProductId","Quantity","ngOnInit","IsUserAuthenticated","LogStatus","UserAuthenticated","form","_this","_asyncToGenerator","credentials","value","PostLogin","subscribe","response","token","localStorage","setItem","getIdfromToken","storagechange","err","getCartItems","items","forEach","item","console","log","addToCartUser","next","error","ɵɵdirectiveInject","i1","Router","i2","UsersService","i3","CartService","selectors","decls","vars","consts","template","LoginFormComponent_Template","rf","ctx","LoginFormComponent_div_1_Template","LoginFormComponent_div_2_Template","LoginFormComponent_div_3_Template"],"sources":["C:\\angular\\gym-site\\src\\component\\login-form\\login-form.component.ts","C:\\angular\\gym-site\\src\\component\\login-form\\login-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UsersService } from 'src/Service/Users/users.service';\nimport { user } from 'src/models/user.model';\nimport { CartService } from '../../Service/cart/cart.service';\r\nimport { product } from '../../models/product.model';\r\nimport { of } from 'rxjs';\r\nimport { CartItem } from '../../models/CartItem.model';\r\n\n\n\n\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent {\n  invalidLogin: boolean = false;\n  LoggedIn: boolean = false;\n  cartItems: product[] = [];\n  myUser: user = {\n    id: '',\n    email: '',\n    password: '',\n    name: '',\n    lastName: '',\n    admin: false\n  };\n  addCartRequest: CartItem = {\n    CartId: '',\r\n    userId: '',\r\n    ProductId: '',\r\n    Quantity: 1\r\n  }\n\n  // For Local Creds Saving\n  constructor(private router: Router, private usersService: UsersService, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.usersService.IsUserAuthenticated();\n    this.LoggedIn = this.usersService.LogStatus;\n  }\n  public UserAuthenticated() {\n    this.usersService.IsUserAuthenticated();\n  }\n\n  async login(form: NgForm) {\r\n    const credentials = {\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n    };\r\n\r\n    this.myUser.email = credentials.email;\r\n    this.myUser.password = credentials.password;\r\n\r\n\r\n    await this.usersService.PostLogin(credentials).subscribe(\r\n      (response) => {\r\n        const token = (<any>response).token;\r\n        localStorage.setItem('jwt', token);\r\n        this.invalidLogin = false;\r\n        if (this.usersService.IsUserAuthenticated()) {\r\n          this.usersService.LogStatus = true;\r\n          const userId = this.usersService.getIdfromToken();\r\n          this.storagechange(userId)\r\n          //window.location.reload();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.invalidLogin = true;\r\n      }\r\n    );\r\n  }\r\n\n  storagechange(userId:string) {\n    this.cartService.getCartItems().subscribe(items => {\n      this.cartItems = items;\n\n      items.forEach((item) => {\n        this.addCartRequest.userId = userId;\n        console.log(userId);\n        this.addCartRequest.CartId = \"00000000-0000-0000-0000-000000000000\"\n       this.addCartRequest.ProductId = item.id;\r\n      console.log(this.addCartRequest);\n        this.cartService.addToCartUser(this.addCartRequest).subscribe({\r\n          next: (response) => {//after go to product page\r\n            console.log(\"Item added to cart successfully\");\r\n          },\r\n          error: (error) => {\n            console.log(\"Problem adding to cart: \", error);\n          }\r\n        });\r\n      });\n      //this.cartService.clearCart();\n    });\r\n  }\n\n}\n","<div class=\"container-xxl mt-5\">\n  <div *ngIf=\"!LoggedIn\">\n    <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n      <div class=\"container-xxl mt-5\">\n        <h1 class=\"center\">Login</h1>\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n          Invalid name or password\n        </div>\n        <br />\n        <div>\n          <label for=\"email\" class=\"sr-only\">Email:</label>\n          <input name=\"email\"\n                 type=\"text\"\n                 id=\"email\"\n                 ngModel\n                 class=\"form-control\"\n                 placeholder=\"email\"\n                 required\n                 autofocus />\n        </div>\n        <div>\n          <label for=\"password\" class=\"sr-only\">Password:</label>\n          <input name=\"password\"\n                 type=\"password\"\n                 id=\"password\"\n                 ngModel\n                 class=\"form-control\"\n                 placeholder=\"password\"\n                 required\n                 autofocus />\n        </div>\n        <br />\n        <button class=\"btn btn-dark\" type=\"submit\">Login</button>\n      </div>\n    </form>\n  </div>\n  <div *ngIf=\"LoggedIn\">\n    <h1 class=\"center\">You are logged in !</h1>\n  </div>\n</div>\n<div *ngIf=\"LoggedIn == false\">dont have a user, click <a href=\"sign-in\">here</a> to creat</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}